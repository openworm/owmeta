.. _docs:

Adding documentation
---------------------
Documentation for |pow| is housed in two locations: 

    #. In the top-level project directory as :file:`INSTALL.md` and :file:`README.md`. 
    #. As a `Sphinx <http://sphinx-doc.org/>`_ project under the ``docs`` directory 

To add a page about useful facts concerning C. elegans to the documentation, include an entry in the list under ``toctree`` in :file:`docs/index.rst` like::

    worm-facts

and create the file :file:`worm-facts.rst` under the :file:`docs` directory and add a line::

    .. _worm-facts:

to the top of your file, remembering to leave an empty line before adding all of your wonderful worm facts.

You can get a preview of what your documentation will look like when it is published by running ``sphinx-build`` on the docs directory::

    sphinx-build -w sphinx-errors docs build_destination

The docs will be compiled to html which you can view by pointing your web browser at :file:`build_destination/index.html`. If you want to view the documentation locally with the `ReadTheDocs theme <https://github.com/snide/sphinx_rtd_theme>`_ you'll need to download and install it.

API Documentation
------------------
API documentation is generated by the Sphinx `autodoc <http://sphinx-doc.org/ext/autodoc.html>`_ extension. The format should be easy to pick up on, but a reference is available `here <https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt>`_. Just add a docstring to your function/class/method and add an ``automodule`` line to :file:`PyOpenWorm/__init__.py` and your class should appear among the other documented classes.

Substitutions
-------------
Project-wide substitutions can be (conservatively!) added to allow for easily changing a value over all of the documentation. Currently defined substitutions can be found in :file:`conf.py` in the ``rst_epilog`` setting. `More about substitutions <http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html#substitution-definitions>`_

Conventions
-----------
If you'd like to add a convention, list it here and start using it.

Currently there are no real conventions to follow for documentation style, but additions to the docs will be subject to style and content review by project maintainers.
